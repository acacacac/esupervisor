@model eSupervisor_Beta.MyClasses.PostAndComments

@{
    ViewBag.Title = "Details";
    int roleID = (int)new eSupervisor_Beta.Models.eSupervisorEntities().users.Find((int)Session["userid"]).roleID; if (roleID == 3) { Layout = "~/Views/Shared/_StudentLayout.cshtml"; } else if (roleID == 2) { Layout = "~/Views/Shared/_TeacherLayout.cshtml"; } else { Layout = "~/Views/Shared/_Layout.cshtml"; }
}

<h2>Details</h2>

<div>
    <h4>post</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.post.title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.post.title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.post.C_content)
        </dt>
        @if (Model.post.fileUploads.ToList().Count <= 0)
        {
            <dd>
                @Html.Raw(Model.post.C_content)
            </dd>
        }
        else
        {
            foreach (eSupervisor_Beta.Models.fileUpload file in Model.post.fileUploads)
            {
                string uri = file.fileUri;
                <a href="../../@uri" target="_blank">Download</a>
            }
        }
        <dt>
            @Html.DisplayNameFor(model => model.post.postTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.post.postTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.post.updateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.post.updateTime)
        </dd>

        <dt>
            @Html.DisplayName("Author")
        </dt>

        <dd>
            @Html.DisplayName(Model.post.user.firstName + " " + Model.post.user.lastName)
        </dd>

    </dl>
</div>

<div>
    <h4>comments</h4>
    <hr />
    <table class="table">
        @foreach (var cm in Model.comments)
        {
            <tr>
                <td>
                    @Html.DisplayName(cm.user.firstName + " " + cm.user.lastName)
                </td>
                <td>
                    @Html.Raw(cm.C_content)
                </td>
            </tr>
        }
    </table>
</div>
@using (Html.BeginForm("createComment", "Post"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>comment</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.Label("Comment:", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="commentContent" width="400" height="200" required="true" />
                <input type="text" name="postID" style="display:none" value="@Model.post.id" />
            </div>
        </div>
        <input type="submit" value="Comment" class="btn-default" />
    </div>
}
<p>
    @if (Model.post.user.id == (int)Session["userid"])
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.post.id }) @Html.DisplayName(" | ")
        @Html.ActionLink("Delete", "Delete", new { id = Model.post.id })<br />
    }
    @Html.ActionLink("Back to Posts", "Index")
</p>
