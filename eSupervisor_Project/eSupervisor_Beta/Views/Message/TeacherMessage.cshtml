@model IEnumerable<eSupervisor_Beta.Models.user>
@{
    ViewBag.Title = "TeacherMessage";
    int roleID = (int)new eSupervisor_Beta.Models.eSupervisorEntities().users.Find((int)Session["userid"]).roleID; if (roleID == 3) { Layout = "~/Views/Shared/_StudentLayout.cshtml"; } else if (roleID == 2) { Layout = "~/Views/Shared/_TeacherLayout.cshtml"; } else { Layout = "~/Views/Shared/_Layout.cshtml"; }
}
<br />
<a href="#list">Send message to other students</a>

<br /><br />
<div class="chat-panel panel panel-default">
    <div class="panel-heading">
        <i class="fa fa-comments fa-fw"></i>
        Chat
    </div>
    <!-- /.panel-heading -->
    <div class="panel-body">
        <ul class="chat">
            <div id="messagesTable"></div>
        </ul>
    </div>
    <!-- /.panel-body -->
    <div class="panel-footer">
        <div class="input-group">
            <input id="messageContent" type="text" class="form-control input-sm" placeholder="Type your message here..." required="true" onkeypress="" />
            <span class="input-group-btn">
                <button class="btn btn-warning btn-sm" id="sendMessage">
                    Send
                </button>
            </span>
        </div><br />
        <span style="color:red" id="error"></span>
    </div>
    <!-- /.panel-footer -->
</div>
<!-- /.panel .chat-panel -->
<br />
<a name="list"></a>
@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover" id="dataTables">
            <thead>
                <tr>
                    <td>Student ID</td>
                    <td>First Name</td>
                    <td>Last Name</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.firstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.lastName)
                        </td>
                        <td>
                            @Ajax.ActionLink("Chat with student " + item.firstName + " " + item.lastName,
                        "GetMessages",
                        new { receiverID = item.id },
                        new AjaxOptions
                         {
                             UpdateTargetId = "messagesTable", // <-- DOM element ID to update
                             InsertionMode = InsertionMode.Replace, // <-- Replace the content of DOM element
                             HttpMethod = "GET" // <-- HTTP method
                         },
                         new { id = item.id })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <h3>You have no students!</h3>
}
@section Scripts{
    <script src="/Scripts/jquery.signalR-2.2.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="/signalr/hubs"></script>

    <script type="text/javascript">
        var receiverID = @Model.ToList().ElementAt(0).id;
        $(document).ready(function () {
            $("a").click(function () {
                receiverID = $(this).attr('id');
            });

            // Declare a proxy to reference the hub.
            var notifications = $.connection.messagesHub;

            //debugger;
            // Create a function that the hub can call to broadcast messages.
            notifications.client.updateMessages = function () {
                getAllMessages()
            };
            // Start the connection.
            $.connection.hub.start().done(function () {
                getAllMessages();
            }).fail(function (e) {
                alert(e);
            });
        });

        $("#sendMessage").click(function () {
            if($("#messageContent").val()==""){
                $("#error").text("Please type in your message!");
            }
            else{
                $("#error").text("");
                sendMessage();
                $("#messageContent").val("");
            }
        });

        $('#messageContent').keypress(function (e) {
            if (e.which == 13) {
                $("#sendMessage").click();
            }
        });

        function sendMessage() {
            var mess = $("#messageContent").val();
            $.ajax({
                type: 'POST',
                url: '/Message/SendMessage',
                data: {
                    'message': mess,
                    'receiverID': receiverID
                },
                success: function (response) {
                    if (response == null || !response.success) {
                        window.location.reload();
                    }
                }
            });
        }

        function getAllMessages() {
            var tbl = $('#messagesTable');
            $.ajax({
                url: '/Message/GetMessages',
                data: {
                    'receiverID': receiverID
                },
                contentType: 'application/html ; charset:utf-8',
                type: 'GET',
                dataType: 'html'
            }).success(function (result) {
                tbl.empty().append(result);
                $(".panel-body").scrollTop($("#messagesTable")[0].scrollHeight);
            }).error(function () {

            });
        }

        $(document).ready(function () {
            $('#dataTables').DataTable({
                responsive: true
            });
        });
    </script>
}
